# Generated by Django 5.1.5 on 2025-04-19 16:21

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patient', '0012_patient_gender'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PreliminaryAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_pressure', models.CharField(blank=True, max_length=200, null=True)),
                ('temperature', models.CharField(blank=True, max_length=200, null=True)),
                ('heart_rate', models.CharField(blank=True, max_length=200, null=True)),
                ('respiratory_rate', models.CharField(blank=True, max_length=200, null=True)),
                ('pulse_rate', models.CharField(blank=True, max_length=200, null=True)),
                ('allergies', models.TextField(blank=True, max_length=500, null=True)),
                ('medical_history', models.TextField(blank=True, max_length=500, null=True)),
                ('symptoms', models.TextField(max_length=200)),
                ('current_medications', models.TextField(blank=True, max_length=500, null=True)),
                ('pain_scale', models.CharField(blank=True, max_length=200, null=True)),
                ('pain_location', models.CharField(blank=True, max_length=200, null=True)),
                ('smoking_status', models.CharField(blank=True, max_length=200, null=True)),
                ('alcohol_use', models.CharField(blank=True, max_length=200, null=True)),
                ('assessment', models.TextField(blank=True, max_length=200, null=True)),
                ('assessment_date', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preliminaryassessment', to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryStorageQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority_level', models.CharField(choices=[('Regular', 'Regular'), ('Priority', 'Priority Lane (PWD/Pregnant)')], default='Regular', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Waiting', 'Waiting'), ('Queued for Assessment', 'Queued for Assessment'), ('Queued for Treatment', 'Queued for Treatment'), ('Ongoing for Treatment', 'Ongoing for Treatment'), ('Completed', 'Completed')], default='Waiting', max_length=50)),
                ('complaint', models.TextField(blank=True, choices=[('General Illness', 'General Illness'), ('Injury', 'Injury'), ('Check-up', 'Check-up'), ('Other', 'Other')], max_length=100, null=True)),
                ('queue_number', models.PositiveBigIntegerField(blank=True, null=True)),
                ('queue_date', models.DateField(default=datetime.date.today)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporarystoragequeue', to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnoses', models.ManyToManyField(related_name='treatments', to='patient.diagnosis')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='patient.patient')),
                ('prescriptions', models.ManyToManyField(related_name='treatments', to='patient.prescription')),
            ],
        ),
    ]
